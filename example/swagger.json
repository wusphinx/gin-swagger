{
  "swagger": "2.0",
  "info": {},
  "basePath": "/",
  "paths": {
    "/": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "test"
        ],
        "operationId": "Test",
        "parameters": [
          {
            "maximum": 20,
            "exclusiveMaximum": true,
            "minimum": -1,
            "type": "integer",
            "format": "int8",
            "default": "10",
            "x-go-name": "Size",
            "x-go-validate": "@int8[-1,20)",
            "description": "分页大小",
            "name": "size",
            "in": "query"
          },
          {
            "maximum": 100,
            "minimum": -1,
            "type": "integer",
            "format": "int8",
            "default": "0",
            "x-go-name": "Offset",
            "x-go-validate": "@int8[-1,100]",
            "description": "分页偏移",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "x-go-name": "StartTime",
            "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.Date",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "TWO"
            ],
            "type": "string",
            "x-enum-labels": [
              "one",
              "two",
              "three",
              "four"
            ],
            "x-enum-vals": [
              1,
              2,
              3,
              105
            ],
            "x-enum-values": [
              "ONE",
              "TWO",
              "THREE",
              "FOUR"
            ],
            "x-go-name": "State",
            "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.State",
            "x-go-validate": "@string{TWO}",
            "name": "state",
            "in": "query",
            "required": true
          },
          {
            "type": "file",
            "x-go-name": "File",
            "x-go-named": "mime/multipart.FileHeader",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "正常返回",
            "schema": {
              "$ref": "#/definitions/SomeTest"
            }
          },
          "400": {
            "description": "@httpError(40000200,HTTP_ERROR_UNKNOWN,\"未定义\",\"\",false);\n@httpError(400002004,HTTP_ERROR__TEST2,\"Test2\",\"Description\",true);",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    },
    "/auto": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "from_request"
        ],
        "summary": "Get User",
        "operationId": "GetUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Id",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Age",
            "name": "age",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GetUser"
            }
          }
        }
      }
    },
    "/test": {
      "get": {
        "description": "Others\nheheheh",
        "produces": [
          "application/json"
        ],
        "tags": [
          "test3"
        ],
        "summary": "Summary",
        "operationId": "Test3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Authorization",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Some"
            }
          },
          "400": {
            "description": "@httpError(400002000,HTTP_ERROR_UNKNOWN,\"未定义\",\"\",false);",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    },
    "/user/test/{name}/0": {
      "get": {
        "description": "Others\nheheheh",
        "produces": [
          "application/json"
        ],
        "tags": [
          "test2"
        ],
        "summary": "Summary",
        "operationId": "Test2",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Authorization",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "maximum": 20,
            "exclusiveMaximum": true,
            "minimum": -1,
            "type": "integer",
            "format": "int8",
            "default": "10",
            "x-go-name": "Size",
            "x-go-validate": "@int8[-1,20)",
            "description": "分页大小",
            "name": "size",
            "in": "query"
          },
          {
            "maximum": 100,
            "minimum": -1,
            "type": "integer",
            "format": "int8",
            "default": "0",
            "x-go-name": "Offset",
            "x-go-validate": "@int8[-1,100]",
            "description": "分页偏移",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "x-go-validate": "@int8[-1,100]",
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int8"
            },
            "collectionFormat": "csv",
            "x-go-name": "Ids",
            "description": "ids",
            "name": "ids",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int8",
            "x-go-name": "Id",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "x-go-name": "Is",
            "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.Bool",
            "name": "is",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "ONE"
            ],
            "type": "string",
            "x-enum-labels": [
              "one",
              "two",
              "three",
              "four"
            ],
            "x-enum-vals": [
              1,
              2,
              3,
              105
            ],
            "x-enum-values": [
              "ONE",
              "TWO",
              "THREE",
              "FOUR"
            ],
            "x-go-name": "State",
            "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.State",
            "x-go-validate": "@string{ONE}",
            "name": "state",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "x-enum-labels": [
                "one",
                "two",
                "three",
                "four"
              ],
              "x-enum-vals": [
                1,
                2,
                3,
                105
              ],
              "x-enum-values": [
                "ONE",
                "TWO",
                "THREE",
                "FOUR"
              ],
              "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.State",
              "x-go-validate": "@string{ONE}",
              "enum": [
                "ONE"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-go-name": "States",
            "name": "states",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "x-go-name": "StartTime",
            "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.Date",
            "name": "startTime",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "正常返回",
            "schema": {
              "$ref": "#/definitions/Some"
            }
          },
          "400": {
            "description": "@httpError(400002000,HTTP_ERROR_UNKNOWN,\"未定义\",\"\",false);\n@httpError(400002001,HTTP_ERROR__TEST,\"Summary\",\"\",true);",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Common": {
      "description": "Common",
      "type": "object",
      "required": [
        "total"
      ],
      "properties": {
        "total": {
          "description": "总数",
          "type": "integer",
          "format": "int8",
          "x-go-name": "Total"
        }
      }
    },
    "ErrorFieldModel": {
      "type": "object",
      "required": [
        "field",
        "msg",
        "in"
      ],
      "properties": {
        "field": {
          "description": "输入中出错的字段信息,这个信息为一个json字符串,方便客户端进行定位错误原因\n例如输入中{\"name\":{\"alias\" : \"test\"}}中的alias出错,则返回\"name.alias\"\n如果 alias 是数组, 且第2个元素的a字段错误,则返回\"name.alias[2].a\"",
          "type": "string",
          "x-go-name": "Field"
        },
        "in": {
          "description": "错误字段位置, body, query, header, path, formData",
          "type": "string",
          "x-go-name": "In"
        },
        "msg": {
          "description": "错误信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      }
    },
    "ErrorMap": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GeneralError": {
      "type": "object",
      "required": [
        "key",
        "code",
        "msg",
        "desc",
        "canBeTalkError",
        "errorFields",
        "source",
        "id"
      ],
      "properties": {
        "canBeTalkError": {
          "description": "是否能作为错误话术",
          "type": "boolean",
          "x-go-name": "CanBeErrorTalk"
        },
        "code": {
          "description": "详细描述",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Code"
        },
        "desc": {
          "description": "错误代码",
          "type": "string",
          "x-go-name": "Desc"
        },
        "errorFields": {
          "description": "出错字段",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldModel"
          },
          "x-go-name": "ErrorFields"
        },
        "id": {
          "description": "Request Id",
          "type": "string",
          "x-go-name": "Id"
        },
        "key": {
          "description": "详细描述",
          "type": "string",
          "x-go-name": "Key"
        },
        "msg": {
          "description": "错误信息",
          "type": "string",
          "x-go-name": "Msg"
        },
        "source": {
          "description": "错误溯源",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Source"
        }
      }
    },
    "GetUser": {
      "description": "Get User",
      "type": "object",
      "required": [
        "id",
        "age"
      ],
      "properties": {
        "age": {
          "type": "string",
          "x-go-name": "Age"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        }
      }
    },
    "ItemData": {
      "type": "object",
      "required": [
        "name",
        "id",
        "state",
        "startTime"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "name": {
          "type": "string",
          "default": "",
          "minLength": 0,
          "x-go-name": "Name",
          "x-go-validate": "@string[0,)"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "StartTime",
          "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.Date"
        },
        "state": {
          "type": "string",
          "enum": [
            "ONE",
            "TWO",
            "THREE",
            "FOUR"
          ],
          "x-enum-labels": [
            "one",
            "two",
            "three",
            "four"
          ],
          "x-enum-vals": [
            1,
            2,
            3,
            105
          ],
          "x-enum-values": [
            "ONE",
            "TWO",
            "THREE",
            "FOUR"
          ],
          "x-go-name": "State",
          "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.State"
        }
      }
    },
    "Some": {
      "description": "Some\nstruct",
      "type": "object",
      "required": [
        "state",
        "name",
        "data",
        "startTime"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemData"
          },
          "x-go-name": "Data"
        },
        "name": {
          "type": "string",
          "format": "uint64",
          "x-go-name": "Name"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "StartTime",
          "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.Date"
        },
        "state": {
          "description": "Test",
          "type": "string",
          "default": "",
          "enum": [
            "TWO"
          ],
          "x-enum-labels": [
            "one",
            "two",
            "three",
            "four"
          ],
          "x-enum-vals": [
            1,
            2,
            3,
            105
          ],
          "x-enum-values": [
            "ONE",
            "TWO",
            "THREE",
            "FOUR"
          ],
          "x-go-name": "State",
          "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.State",
          "x-go-validate": "@string{,TWO}"
        }
      }
    },
    "SomeTest": {
      "allOf": [
        {
          "$ref": "#/definitions/Common"
        },
        {
          "description": "SomeTest",
          "type": "object",
          "required": [
            "state",
            "errorMap"
          ],
          "properties": {
            "errorMap": {
              "x-go-name": "ErrorMap",
              "$ref": "#/definitions/ErrorMap"
            },
            "state": {
              "type": "string",
              "default": "",
              "enum": [
                "TWO"
              ],
              "x-enum-labels": [
                "one",
                "two",
                "three",
                "four"
              ],
              "x-enum-vals": [
                1,
                2,
                3,
                105
              ],
              "x-enum-values": [
                "ONE",
                "TWO",
                "THREE",
                "FOUR"
              ],
              "x-go-name": "State",
              "x-go-named": "github.com/wusphinx/gin-swagger/example/test2.State",
              "x-go-validate": "@string{TWO}"
            }
          }
        }
      ]
    }
  }
}